/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define _BASE 0
#define _L_SYMFU 1
#define _R_SYMFU 2
#define _R_SHORT 3
#define _NAV 4

/ {
// ---------------------------------------------------------------------------------------------------------------------------------
// |   0   |  1  |  2  |   3  |   4  |   5  |                                           |   6  |   7   |   8   |   9  |   10  |  11  |
// +-------+-LGui+LAlt-+-LCtl-+-LSft-+-Clr--+                                           +-Short+-RSft--+-RCtl--+-LAlt-+-RGui--+------+
// |  12   | 13  | 14  |  15  |  16  |  17  |               <-Caps Word ->              |  18  |  19   |  20   |  21  |   22  |  23  |
// +-------+-----+-----+AltGr-+-Nav--+------+                                           +------+-Nav---+-AltGr-+------+-------+------+
// |  24   | 25  | 26  |  27  |  28  |  29  |   30    |    31   |   |   32    |   33    |  34  |  35   |  36   |  37  |   38  |  39  |
//                     |  40  |  41  |  42  |   43    |    44   |   |   45    |   46    |  47  |  48   |  49   |
//                                               ^---------------ESC--------------^
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <43 46>;
            bindings = <&kp ESC>;
        };
        combo_caps_word {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&caps_word>;
        };

        // Left top row
        combo_left_super {
            timeout-ms = <50>;
            key-positions = <1 13>;
            bindings = <&sk LGUI>;
        };
        combo_left_alt {
            timeout-ms = <50>;
            key-positions = <2 14>;
            bindings = <&sk LALT>;
        };
        combo_left_ctrl {
            timeout-ms = <50>;
            key-positions = <3 15>;
            bindings = <&sk LCTL>;
        };
        combo_left_shift {
            timeout-ms = <50>;
            key-positions = <4 16>;
            bindings = <&sk LSHFT>;
        };
        combo_clear {
            timeout-ms = <50>;
            key-positions = <5 17>;
            bindings = <&sys_reset>;
        };

        // Right top row
        combo_right_short {
            timeout-ms = <50>;
            key-positions = <6 18>;
            bindings = <&sl _R_SHORT>;
        };
        combo_right_shift {
            timeout-ms = <50>;
            key-positions = <7 19>;
            bindings = <&sk RSHFT>;
        };
        combo_right_ctrl {
            timeout-ms = <50>;
            key-positions = <8 20>;
            bindings = <&sk RCTL>;
        };
        combo_right_alt {
            timeout-ms = <50>;
            key-positions = <9 21>;
            bindings = <&sk LALT>;
        };
        combo_right_gui {
            timeout-ms = <50>;
            key-positions = <10 22>;
            bindings = <&sk RGUI>;
        };

        // Left bottom row
        combo_left_altgr {
            timeout-ms = <50>;
            key-positions = <15 27>;
            bindings = <&sk RALT>;
        };

        // Right bottom row
        combo_right_altgr {
            timeout-ms = <50>;
            key-positions = <20 36>;
            bindings = <&sk RALT>;
        };
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        triggers-per-rotation = <36>;
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |  Q  |  W  |  F   |  P   |  B   |                                          |  J   |  L    |  U    |  Y   |   ;   |      |
// |       |  A  |  R  |  S   |  T   |  G   |                                          |  M   |  N    |  E    |  I   |   O   |      |
// |       |  Z  |  X  |  C   |  D   |  V   |         |         |  |         |         |  K   |  H    |  ,    |  .   |   /   |      |
//                     | GUI  |      | RET  |  SPACE  |   TAB   |  | BSPACE  |  ENTER  | TAB  |       | R-ALT |
            bindings = <
    &none   &kp Q &kp W &kp F &kp P &kp B                                                &kp J &kp L  &kp U     &kp Y   &kp SEMI &none
    &none   &kp A &kp R &kp S &kp T &kp G                                                &kp M &kp N  &kp E     &kp I   &kp O &none
    &none   &kp Z &kp X &kp C &kp D &kp V &kp LSHFT &kp LSHFT        &none    &kp LSHFT  &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &none
                  &kp K_PP &none &sl _L_SYMFU &kp SPACE &kp TAB      &kp BSPC  &kp RET  &sl _R_SYMFU &none &kp F20
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(PG_UP) LC(PG_DN)>;
        };
        left_symfu {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |     |  F9 |  F8  |  F7  |  F12 |                                          |  [   |  ]    |  `    |  $   |   …   |      |
// |       | F10 |  F3 |  F2  |  F1  |  F11 |                                          |  {   |  }    |  '    |  :   |   ^   |      |
// |       |     |  F6 |  F5  |  F4  |      |         |         |  |         |         |  <   |  >    |  "    |  ~   |   ?   |      |
//                     |      |      |      |         |         |  |   DEL   |         |      |       |       |
            bindings = <
    &none   &trans  &kp F9 &kp F8 &kp F7 &kp F12                                  &kp LBKT &kp RBKT &kp GRAVE &kp DLLR  &kp RA(SEMI) &none
    &none   &kp F10 &kp F3 &kp F2 &kp F1 &kp F11                                  &kp LBRC &kp RBRC &kp SQT   &kp COLON &kp CARET    &none
    &none   &trans  &kp F6 &kp F5 &kp F4 &trans &none &none       &none   &none   &kp LT   &kp GT   &kp DQT   &kp TILDE &kp QMARK    &trans
                           &trans &none &trans &trans &trans      &kp DEL &trans  &sl _NAV &none &trans
            >;
            sensor-bindings = <&inc_dec_kp C_PREV C_NEXT &inc_dec_kp PG_UP PG_DN>;
        };
        right_symfu {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |  °  |  @  |  *   |  #   |  %   |                                          |      |  7    |  8    |  9   |       |      |
// |       |  |  |  _  |  -   |  (   |  )   |                                          |      |  1    |  2    |  3   |   0   |      |
// |       |  !  |  \  |  +   |  =   |  &   |         |         |  |         |         |      |  4    |  5    |  6   |       |      |
//                     |      |      |      |         |         |  |         |         |      |       |       |
            bindings = <
    &none &kp RA(FSLH)  &kp AT    &kp STAR  &kp HASH  &kp PRCNT                                     &trans &kp N7 &kp N8 &kp N9 &trans &none 
    &none &kp PIPE      &kp UNDER &kp MINUS &kp LPAR  &kp RPAR                                      &trans &kp N1 &kp N2 &kp N3 &kp N0 &none
    &none &kp EXCL      &kp BSLH  &kp PLUS  &kp EQUAL &kp AMPS   &none  &none       &none   &none   &trans &kp N4 &kp N5 &kp N6 &trans &none
                                  &trans    &none     &sl _NAV   &trans &trans      &trans  &trans  &trans &none &trans
            >;
            sensor-bindings = <&inc_dec_kp C_PREV C_NEXT &inc_dec_kp PG_UP PG_DN>;
        };
        right_short {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |      |      |      |      |      |                                         |      |  s-7 | s-8  |  s-9 |      |      |
// |       | BT0  | BT1  | BT2  | BT3  | BT4  |                                         |      |  s-1 | s-2  |  s-3 | s-0  |      |
// |       |      |      |BT_CLR|      |      |      |      |      |      |      |      |      |  s-4 | s-5  |  s-6 |      |      |
//                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
    &trans &trans       &trans       &trans       &trans       &trans                                  &trans &kp LG(N7) &kp LG(N8) &kp LG(N9) &trans     &trans
    &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 3                            &trans &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N0) &trans
    &trans &trans       &trans       &bt BT_CLR   &trans       &trans &trans &trans      &trans &trans &trans &kp LG(N4) &kp LG(N5) &kp LG(N6) &trans     &trans
                                     &trans       &trans       &trans &trans &trans      &trans &trans &trans &trans &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };
        nav {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |      |      |  →   |  ↑   |  ←   |                                         |      |      |      |      |      |      |
// |       |      |  ←   |  →   |  ↓   |      |                                         |      |  ↓   |      |      |      |      |
// |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
//                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
    &trans &trans &trans   &kp RIGHT &kp UP   &kp LEFT                           &trans &trans &trans &trans &trans &trans
    &trans &trans &kp LEFT &kp RIGHT &kp DOWN &trans                             &trans &kp DOWN &trans &trans &trans &trans
    &trans &trans &trans   &trans    &trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                                     &trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC &inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };
    };
};
